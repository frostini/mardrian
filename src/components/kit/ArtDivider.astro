---
import { shuffle, columnWidthsToCssGrid } from "../../utils/index.js";
import { colors } from "../../styles/theme.js";
// color values
const { redColor, blueColor, yellowColor } = colors;
let dividerColors = ["white", "white", redColor, blueColor, yellowColor];
// grid values
let columnWidths = [2,3,7,8,4];
//shuffle columnWidths and convert from column widths to start/end column values for grid
const gridValues = columnWidthsToCssGrid(
  shuffle(columnWidths)
)
// destucture color values into CSS variables
const [
  firstColor,
  secondColor,
  thirdColor,
  fourthColor,
  fifthColor,
] = shuffle(dividerColors)
// destucture gridValues into CSS variables
const [
  firstColumnValue,
  secondColumnValue,
  thirdColumnValue,
  fourthColumnValue,
  fifthColumnValue,
  sixthColumnValue,
  seventhColumnValue,
  eighthColumnValue,
  ninthColumnValue,
  tenthColumnValue,
] = gridValues.flat()
const { 
  height = "0.8rem",
  borderTop = "solid",
  borderBottom = "solid",
  marginBottom = "none",
  width = "100%",
  lineWidth = "0.4rem",
} = Astro.props;
---
<div class="art-divider">
  <div></div>
  <div></div>
  <div></div>
  <div></div>
  <div></div>
</div>
<style define:vars={{ 
  height, // start of prop variables
  width,
  lineWidth,
  borderTop,
  borderBottom,
  marginBottom, // end of prop variables
  firstColor,
  secondColor,
  thirdColor,
  fourthColor,
  fifthColor,
  firstColumnValue,
  secondColumnValue,
  thirdColumnValue,
  fourthColumnValue,
  fifthColumnValue,
  sixthColumnValue,
  seventhColumnValue,
  eighthColumnValue,
  ninthColumnValue,
  tenthColumnValue,
}}>
  .art-divider {
    border: var(--lineWidth) solid var(--dark-color);
    /* outline: 0.3rem solid var(--dark-color); */
    border-style: var(--borderTop) none var(--borderBottom);
    display: grid;
    gap: var(--lineWidth);
    height: var(--height);
    width: var(--width);
    margin-bottom: var(--marginBottom);
    background-color: var(--dark-color);
    grid-template-columns: repeat(24, minmax(0px, 1fr));
    grid-template-rows: minmax(0px, 1fr);
    margin-left: auto;
    margin-right: auto;
    overflow: hidden;
  }
  .art-divider div:nth-child(1){
    background-color: var(--firstColor);
    grid-column: var(--firstColumnValue)/var(--secondColumnValue);
  }
  .art-divider div:nth-child(2){
    background-color: var(--secondColor);
    grid-column: var(--thirdColumnValue)/var(--fourthColumnValue);
  }
  .art-divider div:nth-child(3){
    background-color: var(--thirdColor);
    grid-column: var(--fifthColumnValue)/var(--sixthColumnValue);
  }
  .art-divider div:nth-child(4){
    background-color: var(--fourthColor);
    grid-column: var(--seventhColumnValue)/var(--eighthColumnValue);
  }
  .art-divider div:nth-child(5){
    background-color: var(--fifthColor);
    grid-column: var(--ninthColumnValue)/var(--tenthColumnValue);
  }

  @media screen and (min-width: 1000px) {
    .art-divider { 
      border-style: solid solid var(--borderBottom) solid;
      /* outline: none; */
    }

}
</style>
